{
"execution_list" : ["fluid_stage","thermal_stage"],
"stages" : {
    "fluid_stage" : {
        "stage_preprocess" : {
            "prepare_restart" : {
                "Charlie&Ruben_comments" : "TO BE DISCUSSED: Lo hariamos en el medio entre stages (fuera del stage que acaba!)",
                "write_restart" : false,
                "restart_settings" : {}
            },
            "operations" : [{
                "operation" : "KratosMultiphysics.operations.local_operation.LocalOperation",
                "Parameters" : {}
            },{
                "operation" : "user_operation.UserOperation",
                "Parameters" : {}
            },{
                "operation" : "KratosMultiphysics.LocalCOperation",
                "Parameters" : {}
            }]
        },
        "analysis_stage"   : "KratosMultiphysics.FluidDynamicsApplication.fluid_dynamics_analysis",
        "problem_data"     : {
            "problem_name"  : "1x1_square_fluid",
            "parallel_type" : "OpenMP",
            "echo_level"    : 0,
            "start_time"    : 0.0,
            "end_time"      : 0.5
        },
        "output_processes" : {
            "gid_output" : [{
                "python_module" : "gid_output_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "GiDOutputProcess",
                "help"          : "This process writes postprocessing files for GiD",
                "Parameters"    : {
                    "model_part_name"        : "FluidModelPart.fluid_computational_model_part",
                    "output_name"            : "1x1_square_fluid",
                    "postprocess_parameters" : {
                        "result_file_configuration" : {
                            "gidpost_flags"               : {
                                "GiDPostMode"           : "GiD_PostBinary",
                                "WriteDeformedMeshFlag" : "WriteDeformed",
                                "WriteConditionsFlag"   : "WriteConditions",
                                "MultiFileFlag"         : "SingleFile"
                            },
                            "file_label"                  : "time",
                            "output_control_type"         : "step",
                            "output_interval"             : 1,
                            "body_output"                 : true,
                            "node_output"                 : false,
                            "skin_output"                 : false,
                            "plane_output"                : [],
                            "nodal_results"               : ["VELOCITY","PRESSURE"],
                            "gauss_point_results"         : [],
                            "nodal_nonhistorical_results" : []
                        },
                        "point_data_configuration"  : []
                    }
                }
            }]
        },
        "solver_settings"  : {
            "model_part_name"             : "FluidModelPart",
            "domain_size"                 : 2,
            "solver_type"                 : "Monolithic",
            "model_import_settings"       : {
                "input_type"     : "mdpa",
                "input_filename" : "1x1_square"
            },
            "material_import_settings"    : {
                "materials_filename" : "FluidMaterials.json"
            },
            "echo_level"                  : 0,
            "compute_reactions"           : false,
            "maximum_iterations"          : 10,
            "relative_velocity_tolerance" : 0.001,
            "absolute_velocity_tolerance" : 1e-5,
            "relative_pressure_tolerance" : 0.001,
            "absolute_pressure_tolerance" : 1e-5,
            "volume_model_part_name"      : "CNVDFFParts_Domain",
            "skin_parts"                  : ["HeatFlux2D_Left","HeatFlux2D_Right","ImposedTemperature2D_Bottom","ThermalFace2D_Top"],
            "no_skin_parts"               : [],
            "time_scheme"                 : "bossak",
            "time_stepping"               : {
                "automatic_time_step" : false,
                "time_step"           : 0.1
            },
            "formulation"                 : {
                "element_type"             : "qsvms",
                "use_orthogonal_subscales" : false,
                "dynamic_tau"              : 1.0
            },
            "reform_dofs_at_each_step"    : false
        },
        "processes"        : {
            "initial_conditions_process_list"  : [],
            "boundary_conditions_process_list" : [{
                "python_module" : "assign_scalar_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "Parameters"    : {
                    "model_part_name"    : "FluidModelPart.ImposedTemperature2D_Bottom",
                    "variable_name"      : "PRESSURE",
                    "constrained"        : true,
                    "value"              : 0.0
                }
            },{
                "python_module" : "assign_vector_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "Parameters"    : {
                    "model_part_name" : "FluidModelPart.HeatFlux2D_Left",
                    "variable_name"   : "VELOCITY",
                    "interval"        : [0,"End"],
                    "value"           : [0.0,null,null],
                    "constrained"     : [true,false,false]
                }
            },{
                "python_module" : "assign_vector_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "Parameters"    : {
                    "model_part_name" : "FluidModelPart.HeatFlux2D_Right",
                    "variable_name"   : "VELOCITY",
                    "interval"        : [0,"End"],
                    "value"           : [0.0,null,null],
                    "constrained"     : [true,false,false]
                }
            },{
                "python_module" : "assign_vector_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "Parameters"    : {
                    "model_part_name" : "FluidModelPart.ImposedTemperature2D_Bottom",
                    "variable_name"   : "VELOCITY",
                    "interval"        : [0,"End"],
                    "value"           : [null,0.0,null],
                    "constrained"     : [false,true,false]
                }
            },{
                "python_module" : "assign_vector_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "Parameters"    : {
                    "model_part_name" : "FluidModelPart.ThermalFace2D_Top",
                    "variable_name"   : "VELOCITY",
                    "interval"        : [0,"End"],
                    "value"           : [1.0,0.0,null],
                    "constrained"     : [true,true,false]
                }
            }],
            "gravity"                          : [{
                "python_module" : "assign_vector_by_direction_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "AssignVectorByDirectionProcess",
                "Parameters"    : {
                    "model_part_name" : "FluidModelPart.CNVDFFParts_Domain",
                    "variable_name"   : "BODY_FORCE",
                    "modulus"         : 0.0,
                    "constrained"     : false,
                    "direction"       : [0.0,-1.0,0.0]
                }
            }],
            "auxiliar_process_list"            : []
        },
        "stage_postprocess" : {
            "prepare_restart" : {
                "Charlie&Ruben_comments" : "TO BE DISCUSSED: Lo hariamos en el medio entre stages (fuera del stage que acaba!)",
                "write_restart" : false,
                "restart_settings" : {}
            },
            "operations" : [{
                "operation" : "KratosMultiphysics.operations.local_operation.LocalOperation",
                "Parameters" : {}
            }]
        }
    },
    "thermal_stage" : {
        "stage_preprocess" : {
            "modelers" : [{
                "modeler_name" : "import_mdpa_modeler",
                "kratos_module" : "KratosMultiphysics",
                "Parameters" : {
                    "input_filename" : "1x1_square",
                    "model_part_name" : "ThermalModelPart"
                }
            },{
                "modeler_name" : "copy_value_modeler",
                "kratos_module" : "KratosMultiphysics",
                "Parameters" : {
                    "origin_model_part" : "FluidModelPart",
                    "destination_model_part" : "ThermalModelPart",
                    "variable_names" : ["VELOCITY"]
                }
            },{
                "modeler_name" : "delete_model_parts_modeler",
                "kratos_module" : "KratosMultiphysics",
                "Parameters" : {
                    "model_part_names" : ["FluidModelPart"]
                }
            }],
            "operations" : [{
                "operation" : "KratosMultiphysics.operations.local_operation.LocalOperation",
                "Parameters" : {}
            }]
        },
        "analysis_stage"   : "KratosMultiphysics.ConvectionDiffusionApplication.convection_diffusion_analysis",
        "problem_data"     : {
            "problem_name"  : "1x1_square_heat",
            "parallel_type" : "OpenMP",
            "start_time"    : 0.0,
            "end_time"      : 100.0,
            "echo_level"    : 0
        },
        "solver_settings"  : {
            "solver_type"                        : "transient",
            "analysis_type"                      : "non_linear",
            "model_part_name"                    : "ThermalModelPart",
            "domain_size"                        : 2,
            "model_import_settings"              : {
                "input_type"     : "use_input_model_part"
            },
            "material_import_settings"           : {
                "materials_filename" : "ConvectionDiffusionMaterials.json"
            },
            "line_search"                        : false,
            "echo_level"                         : 0,
            "compute_reactions"                  : false,
            "max_iteration"                      : 10,
            "convergence_criterion"              : "residual_criterion",
            "solution_relative_tolerance"        : 1e-5,
            "solution_absolute_tolerance"        : 1e-7,
            "residual_relative_tolerance"        : 1e-5,
            "residual_absolute_tolerance"        : 1e-7,
            "problem_domain_sub_model_part_list" : ["CNVDFFParts_Domain"],
            "processes_sub_model_part_list"      : ["HeatFlux2D_Left","HeatFlux2D_Right","ImposedTemperature2D_Bottom","ThermalFace2D_Top"],
            "time_stepping"                      : {
                "time_step" : 0.25
            }
        },
        "processes"        : {
            "initial_conditions_process_list" : [{
                "python_module" : "assign_scalar_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "AssignScalarVariableProcess",
                "Parameters"    : {
                    "model_part_name" : "ThermalModelPart.CNVDFFParts_Domain",
                    "variable_name"   : "TEMPERATURE",
                    "interval"        : [0.0,0.0],
                    "constrained"     : false,
                    "value"           : 273.15
                }
            }],
            "constraints_process_list"        : [{
                "python_module" : "assign_scalar_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "AssignScalarVariableProcess",
                "Parameters"    : {
                    "model_part_name" : "ThermalModelPart.ImposedTemperature2D_Bottom",
                    "variable_name"   : "TEMPERATURE",
                    "interval"        : [0.0,"End"],
                    "constrained"     : true,
                    "value"           : 400.0
                }
            }],
            "list_other_processes"            : [{
                "python_module" : "assign_scalar_variable_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "AssignScalarVariableProcess",
                "Parameters"    : {
                    "model_part_name" : "ThermalModelPart.CNVDFFParts_Domain",
                    "variable_name"   : "HEAT_FLUX",
                    "value"           : 0.0,
                    "constrained"     : false
                }
            }]
        },
        "output_processes" : {
            "gid_output" : [{
                "python_module" : "gid_output_process",
                "kratos_module" : "KratosMultiphysics",
                "process_name"  : "GiDOutputProcess",
                "help"          : "This process writes postprocessing files for GiD",
                "Parameters"    : {
                    "model_part_name"        : "ThermalModelPart",
                    "output_name"            : "1x1_square_heat",
                    "postprocess_parameters" : {
                        "result_file_configuration" : {
                            "gidpost_flags"               : {
                                "GiDPostMode"           : "GiD_PostBinary",
                                "WriteDeformedMeshFlag" : "WriteDeformed",
                                "WriteConditionsFlag"   : "WriteConditions",
                                "MultiFileFlag"         : "SingleFile"
                            },
                            "file_label"                  : "time",
                            "output_control_type"         : "step",
                            "output_interval"             : 1.0,
                            "body_output"                 : true,
                            "node_output"                 : false,
                            "skin_output"                 : false,
                            "plane_output"                : [],
                            "nodal_results"               : ["TEMPERATURE","VELOCITY"],
                            "gauss_point_results"         : [],
                            "nodal_nonhistorical_results" : []
                        },
                        "point_data_configuration"  : []
                    }
                }
            }]
        },
        "restart_options"  : {
            "SaveRestart"      : false,
            "RestartFrequency" : 0,
            "LoadRestart"      : false,
            "Restart_Step"     : 0
        }
    }
}
}
